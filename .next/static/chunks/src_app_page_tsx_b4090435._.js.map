{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mdsha/OneDrive/Desktop/frontend_dev_assignment_md_shahid_raza/src/app/page.tsx"],"sourcesContent":["// 'use client'\n// import { WorkerType } from '@/types/workers'\n// import Image from 'next/image'\n// import { useState, useEffect } from 'react'\n\n// export default function WorkersPage() {\n//   const [workersData, setWorkersData] = useState<WorkerType[]>([])\n\n//   useEffect(() => {\n//     const loadData = async () => {\n//       try {\n//         const response = await import('../../workers.json')\n//         setWorkersData(response.default)\n//       } catch (error) {\n//         console.error('Failed to load workers:', error)\n//       }\n//     }\n//     loadData() // sirf ek baar call karna hai\n//   }, [])\n\n//   return (\n//     <main className='min-h-screen min-w-screen bg-gray-800'>\n//       <div >\n//         <h1 className='text-4xl font-bold text-center py-5  w-screen text-zinc-100 mb-12 bg-gray-900 sticky top-0 z-50'>\n//           Our Workers\n//         </h1>\n\n//         {/* Responsive Grid */}\n//         <div className='grid grid-rows-3 sm:grid-rows-4 lg:grid-rows-5 gap-6 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 z-10 container mx-auto '>\n//           {workersData\n//             .filter((worker) => worker.pricePerDay > 0)\n//             .filter((worker) => worker.id !== null)\n//             .sort((a, b) => a.name.localeCompare(b.name))\n//             .map((worker: WorkerType) => (\n//               <div\n//                 key={worker.id}\n//                 className='bg-gray-800 border border-gray-700 rounded-xl overflow-hidden shadow-lg hover:shadow-2xl transform hover:scale-105 transition-all duration-300'\n//               >\n//                 <div className='relative w-full h-64'>\n//                   <Image\n//                     src={worker.image}\n//                     alt={worker.name}\n//                     fill\n//                     className='object-cover'\n//                     priority={worker.id <= 10}\n//                   />\n//                 </div>\n//                 <div className='p-4'>\n//                   <h2 className='text-xl font-semibold text-zinc-100'>\n//                     {worker.name}\n//                   </h2>\n//                   <p className='text-gray-300 mt-1'>{worker.service}</p>\n//                   <p className='mt-3 font-medium text-green-400'>\n//                     ₹{Math.round(worker.pricePerDay * 1.18)} / day\n//                   </p>\n//                 </div>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//     </main>\n//   )\n// }\n'use client'\nimport { WorkerType } from '@/types/workers'\nimport Image from 'next/image'\nimport { useState, useEffect } from 'react'\n\nexport default function WorkersPage() {\n  const [workersData, setWorkersData] = useState<WorkerType[]>([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const workersPerPage = 12\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const response = await import('../../workers.json')\n        setWorkersData(response.default)\n      } catch (error) {\n        console.error('Failed to load workers:', error)\n      }\n    }\n    loadData()\n  }, [])\n\n  // Filter + sort workers\n  const sortedWorkers = workersData\n    .filter((worker) => worker.pricePerDay > 0)\n    .filter((worker) => worker.id !== null)\n    .sort((a, b) => a.name.localeCompare(b.name))\n\n  // Pagination logic\n  const totalPages = Math.ceil(sortedWorkers.length / workersPerPage)\n  const startIndex = (currentPage - 1) * workersPerPage\n  const currentWorkers = sortedWorkers.slice(\n    startIndex,\n    startIndex + workersPerPage\n  )\n\n  return (\n    <main className='min-h-screen min-w-screen bg-gray-800'>\n      <div>\n        <h1 className='text-4xl font-bold text-center py-5 w-screen text-zinc-100 mb-12 bg-gray-900 sticky top-0 z-50'>\n          Our Workers\n        </h1>\n\n        {/* Workers Grid */}\n        <div className='grid sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 z-10 container mx-auto'>\n          {currentWorkers.map((worker: WorkerType) => (\n            <div\n              key={worker.id}\n              className='bg-gray-800 border border-gray-700 rounded-xl overflow-hidden shadow-lg hover:shadow-2xl transform hover:scale-105 transition-all duration-300'\n            >\n              <div className='relative w-full h-64'>\n                <Image\n                  src={worker.image}\n                  alt={worker.name}\n                  fill\n                  className='object-cover'\n                  priority={worker.id <= 10}\n                />\n              </div>\n              <div className='p-4'>\n                <h2 className='text-xl font-semibold text-zinc-100'>\n                  {worker.name}\n                </h2>\n                <p className='text-gray-300 mt-1'>{worker.service}</p>\n                <p className='mt-3 font-medium text-green-400'>\n                  ₹{Math.round(worker.pricePerDay * 1.18)} / day\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Pagination Controls */}\n        <div className='flex justify-center items-center gap-4 mt-8'>\n          <button\n            onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\n            disabled={currentPage === 1}\n            className='px-4 py-2 bg-gray-600 text-white rounded disabled:opacity-50'\n          >\n            Prev\n          </button>\n\n          <span className='text-white'>\n            Page {currentPage} of {totalPages}\n          </span>\n\n          <button\n            onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\n            disabled={currentPage === totalPages}\n            className='px-4 py-2 bg-gray-600 text-white rounded disabled:opacity-50'\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </main>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}